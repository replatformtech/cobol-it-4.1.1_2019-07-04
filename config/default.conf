# COBOL compiler configuration					-*- sh -*-

# Value: any string
name: "Cobol-IT"

# Value: int
tab-width: 8
text-column: 72

# Value: 'mf', 'ibm'
# 
assign-clause: mf

# If yes, file names are resolved at run time using environment variables.
# For example, given ASSIGN TO "DATAFILE", the actual file name will be
#  1. the value of environment variable 'DD_DATAFILE' or
#  2. the value of environment variable 'dd_DATAFILE' or
#  3. the value of environment variable 'DATAFILE' or
#  4. the literal "DATAFILE"
# If no, the value of the assign clause is the file name.
# 
# Value: 'yes', 'no'
filename-mapping: yes

#if yes : same file name resolution as with filename-mapping but only for 
#file declared 
# SELECT .. ASSIGN TO EXTERNAL "DATAFILE"
# this flag has no effect if filename-mapping is yes
external-mapping:yes

# Value: 'yes', 'no'
pretty-display: yes

# Value: 'yes', 'no'
auto-initialize: yes

# Value: 'yes', 'no'
complex-odo: no

# Value: 'yes', 'no'
indirect-redefines: yes

# Binary byte size - defines the allocated bytes according to PIC
# Value:         signed  unsigned  bytes
#                ------  --------  -----
# '2-4-8'        1 -  4                2
#                5 -  9                4
#               10 - 18                8
#
# '1-2-4-8'      1 -  2                1
#                3 -  4                2
#                5 -  9                4
#               10 - 18                8
#
# '1--8'         1 -  2    1 -  2      1
#                3 -  4    3 -  4      2
#                5 -  6    5 -  7      3
#                7 -  9    8 -  9      4
#               10 - 11   10 - 12      5
#               12 - 14   13 - 14      6
#               15 - 16   15 - 16      7
#               17 - 18   17 - 18      8
binary-size: 1-2-4-8

# Value: 'yes', 'no'
binary-truncate: yes

# Value: 'native', 'big-endian'
binary-byteorder: big-endian

# Value: 'yes', 'no'
larger-redefines-ok: yes

# Value: 'yes', 'no'
relaxed-syntax-check: yes

# Perform type OSVS - If yes, the exit point of any currently executing perform
# is recognized if reached.
# Value: 'yes', 'no'
perform-osvs: no

# If yes, non-parameter linkage-section items remain allocated
# between invocations.
# Value: 'no, 'fixed', 'variable' | 'yes'
#fixed     The called program fills in any parameters not specified in the
#          ENTRY...USING phrase.
#
#variable or yes
#          The called program fills in any parameter not actually passed by
#          the caller. Caller must be a Cobol program.
sticky-linkage: no

# If yes, allow non-matching level numbers
# Value: 'yes', 'no'
relax-level-hierarchy: yes

# If yes, allow out of bounds len in expression mystring(x:len)
# Value: `yes', `no'
relax-bounds-check: yes

# if yes Line sequential escape value < 0x20 with a 0x0
#        At read tab char not preceded by 0x0 will be expanded with space to next tabpos(8)
line-seq-mf:yes

#if yes register TALLY is defined as 
# 01 TALLY GLOBAL PICTURE 9(9) USAGE COMP-5 VALUE ZERO. 
tally-register:yes

#if set to yes, OCCURS x TO Y DEPENDING ON Z
# when offset or size are computed, Z is maximised by Y and minimized by X
validate-odo:yes


# not-reserved:
# Value: Word to be taken out of the reserved words list
# (case independent)

# static-link:
#default static symbol list
#include "static.symb"


# Dialect features
# Value: 'ok', 'archaic', 'obsolete', 'skip', 'ignore', 'unconformable'
author-paragraph:		        obsolete
memory-size-clause:		        obsolete
multiple-file-tape-clause:	    obsolete
label-records-clause:		    obsolete
value-of-clause:		        obsolete
data-records-clause:		    obsolete
top-level-occurs-clause:	    ok
synchronized-clause:		    ok
goto-statement-without-name:	obsolete
stop-literal-statement:		    obsolete
support-debugging-line:	        obsolete
padding-character-clause:	    obsolete
next-sentence-phrase:		    archaic
eject-statement:		        skip
entry-statement:		        ok
move-noninteger-to-alphanumeric: error
odo-without-to:			        ok
move-spaces-to-displaynumeric:  error

#Runtime Exception Check
#uncomment and set yes to enable runtime exception
 
#Bound Pointer and base vars 
#EC-BOUND-PTR:no

#I-O 
#EC-I-O:yes

#Field Subscript check  Field(idx)
#EC-BOUND-SUBSCRIPT:no

#Field Ref check        Field(offset:len)
#EC-BOUND-REF-MOD:no

#Non-numeric data check for PIC 9/USAGE COMP-3 target data items.
#EC-DATA-INCOMPATIBLE:yes

#enable CALL stack check
#stack-check:no

# National literal code pages 
#codepage: ASCII
compute-ibm:no
