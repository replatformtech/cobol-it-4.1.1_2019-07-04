### OpenCOBOL Test Suite				-*- m4 -*-

## Copyright (C) 2004-2007 Keisuke Nishida
## Copyright (C) 2007 Roger While
## Copyright (C) 2008-2009 Cobol-IT
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2, or (at your option)
## any later version.
## 
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this software; see the file COPYING.  If not, write to
## the Free Software Foundation, 51 Franklin Street, Fifth Floor
## Boston, MA 02110-1301 USA

AT_SETUP([Empty IF])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           IF 3 = 1
	   ELSE
               DISPLAY "OK"
           END-IF.
           IF 3 = 1
               DISPLAY "OK"
	   ELSE
           END-IF.
           IF 3 = 1
           END-IF.
           IF 3 = 1
	   ELSE
               DISPLAY "OK".
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [0])

AT_CLEANUP


AT_SETUP([Ambiguous AND/OR])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           IF 3 = 1 AND 2 OR 3
               DISPLAY "OK"
               END-DISPLAY
           END-IF.
           IF 3 = 1 OR 2 AND 3
               DISPLAY "NO"
               END-DISPLAY
           END-IF.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [0], ,
[prog.cob:5: Warning: Suggest parentheses around AND within OR
prog.cob:9: Warning: Suggest parentheses around AND within OR
])

AT_CLEANUP

AT_SETUP([START on SEQUENTIAL file])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION IS LINE SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          02 XDATA      PIC X(4).

       PROCEDURE        DIVISION.
           INITIALIZE XDATA OF TEST-FILE.
           OPEN  INPUT TEST-FILE.
           START TEST-FILE KEY EQUAL TEST-REC
           END-START.
           CLOSE TEST-FILE.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:18: Error: START not allowed on SEQUENTIAL files
])

AT_CLEANUP

AT_SETUP([OPTIONAL END-PERFORM])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       DATA             DIVISION.
       WORKING-STORAGE SECTION.
001245  01 var  PIC X(60) VALUE                                         TAPW51
001246                  "a23c: Nettosozialleistung/Krankentagegeld mtl."TAPW51
001247-                 .                                               TAPW51
        01 IND-VAR PIC 9(4).
        01 WS-STRUCT .
          02 WS-APPO PIC X(5) OCCURS 10  .
       PROCEDURE        DIVISION.
NS0240     PERFORM VARYING IND-VAR  FROM 8 BY -1
NS0240       UNTIL WS-APPO(IND-VAR) NOT = SPACES.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [0])

AT_CLEANUP

AT_SETUP([IF NOT ZERO])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. A.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 W-VAR1 PIC 9(01).
       01 W-VAR2 PIC 9(01).
       01 W-VAR3 PIC 9(01).
       01 X-VAR1 PIC X(03).
       01 X-VAR2 PIC X(03).
       01 X-VAR3 PIC X(03).
       PROCEDURE DIVISION.
       MOVE 1 TO W-VAR1 W-VAR2
       MOVE zero TO W-VAR3
       IF W-VAR1 = W-VAR2 AND W-VAR3 IS ZERO
           DISPLAY "OK"
       END-IF
       IF W-VAR1 = W-VAR2 AND NOT zero
           DISPLAY "OK"
       END-IF
       IF W-VAR1 = W-VAR2 AND NOT 0
           DISPLAY "OK"
       END-IF
       EXIT PROGRAM.
])

AT_CHECK([${COMPILE} -o prog prog.cob])
AT_CHECK([./prog], [0],
[OK
OK
OK
])

AT_CLEANUP

AT_SETUP([COMPLEX IF AND OR])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 W-VAR1 PIC 9(01).
       PROCEDURE DIVISION.
       MOVE 1 TO W-VAR1
       IF W-VAR1 > 0 AND ( < 3 OR  > 5 )
       DISPLAY "OK"
       END-IF
       MOVE 4 TO W-VAR1
       IF W-VAR1 > 0 AND ( < 3 OR > 5 )
       DISPLAY "KO"
       END-IF.
       EXIT PROGRAM.
])

AT_CHECK([${COMPILE} -o prog prog.cob])
AT_CHECK([./prog], [0],
[OK
])

AT_CLEANUP

AT_SETUP([EVALUATE TRUE])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
           01  FELD-B       PIC  X(10).
           01  forward      PIC 9.
       PROCEDURE DIVISION.
           EVALUATE TRUE                  
            WHEN  FELD-B (4:7) = '       '   
            WHEN FELD-B (1:3) = 'FHV' AND FELD-B (4:5) = '  '    
                  display "ab"

           END-EVALUATE.
           
       ANY-SECTION SECTION. 
           CONTINUE.
       ANY-SECTION-END. 
       .
])

AT_CHECK([${COMPILE} -w -o prog prog.cob])

AT_CLEANUP

AT_SETUP([SEARCH ALL WHEN empty])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
	   01           T606
030050     02           1-T606      OCCURS 100
030060                              ASCENDING KEY IS T606-SKCT06
030070                              INDEXED   BY  IT606I.
		03 T606-SKCT06 PIC 99.
       PROCEDURE DIVISION.
070060     SEARCH ALL 1-T606 END
070070     GO TO F9606-ERREUR
070080     WHEN T606-SKCT06 (IT606I) =
070090          10              
070100     END-SEARCH	
	   GO TO ANY-SECTION-END.

070060     SEARCH ALL 1-T606 END
070070     GO TO F9606-ERREUR
070080     WHEN T606-SKCT06 (IT606I) =
070090          10              
		DISPLAY 'OK'
070100     END-SEARCH	
	   GO TO ANY-SECTION-END.
	   	   
       F9606-ERREUR. 
           CONTINUE.
       ANY-SECTION-END. 
       .
])

AT_CHECK([${COMPILE} -w -o prog prog.cob])

AT_CLEANUP

AT_SETUP([Restrict to IBM 5.2])

AT_DATA([cit.conf], [
include "default.conf"
#Desactivate Reserved Word
not-reserved:CRT
not-reserved:NORMAL

#LOW-VALUE as base initialize
defaultbyte:0
use-defaultbyte:yes

#prevent MOVE PIC X TO PIC 9
compile-move-picx-to-pic9:ok
#move-picx-to-pic9:raw  

move-spaces-to-displaynumeric:error
move-spaces-to-comp3:error
move-high-low-to-displaynumeric:error

larger-redefines-ok:yes
indirect-redefines:no

binary-size:2-4-8
compute-ibm:yes

redefine-identifier:warning
non-ibm-5.2-syntax:error

])

AT_DATA([test.cbl], 
[       IDENTIFICATION DIVISION.
       PROGRAM-ID. IAP9716P.
       AUTHOR. SOPRA.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. IBM-370.
       OBJECT-COMPUTER. IBM-370.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
      * -
      * - Nom du programme
       01  W-ORDRE                     PIC X(10000).
      *-
TEST03 01  TEST-DATE                 PIC X(02).
      *-
TEST13 01  TEST-NUM-PICX.
TEST13     05 TEST-NUM-PICX-BIS      PIC X(02).
      *-
TEST05*- Variable 01 déclarée après colonne 8 
TEST05	         01  TEST-OK         PIC X(02) VALUE 'Ok'.
       01 VALA PIC 99.
      *-
      * - COPIES COBOL
      *
TEST07*LINKAGE SECTION.
      * -- ZONE TEMPORAIRE POUR RESERVATION MEMOIRE
      *     COPY IAPW9712.
       01  DFHCOMMAREA.
      * -- ZONE DE COMMUNICATION POUR LE GESTIONNAIRES DE SERVICES APP.
            03  DFHCOMMAREA-DATA PIC X(10).
      * -
       PROCEDURE DIVISION USING DFHCOMMAREA.
      * -
       DEBUT.
      * ---
      * ---   PMA - DEBUT TESTS PB COMPIL
      * ---
TEST01     DISPLAY "=========> DEBUT TEST01".
           IF       TEST-OK                = 'Ok'
           ELSE
           END-IF.
TEST01     DISPLAY "=========> FIN TEST01".
      * -
TEST02     DISPLAY "=========> DEBUT TEST02".
           EVALUATE  VALA
            WHEN     10
            WHEN     OTHER
           END-EVALUATE.
TEST02     DISPLAY "=========> FIN TEST02".
      * -
TEST03     DISPLAY "=========> DEBUT TEST03".
           MOVE      W-ORDRE (1:4)   TO    TEST-DATE.
TEST03     DISPLAY "=========> FIN TEST03".
      * -
TEST04     DISPLAY "=========> DEBUT TEST04".
           IF       TEST-OK                = 'Ok
      -'   '
            DISPLAY "=========> TEST04 et TEST06 OK"
TEST06     END-IF..
TEST04     DISPLAY "=========> FIN TEST04 et TEST06".
      * -
TEST08     DISPLAY "=========> DEBUT TEST08".
TEST12  IF       TEST-OK               <> 'KO'
               DISPLAY "=========> TEST08 et TEST12 OK"
           END-IF.
TEST08     DISPLAY "=========> FIN TEST08".
      * -
TEST13     DISPLAY "=========> DEBUT TEST13".
          IF TEST-NUM-PICX   NOT NUMERIC
               DISPLAY "=========> TEST13 OK"
           END-IF.
TEST13     DISPLAY "=========> FIN TEST13".
      * -
      * -
      * ---
       FIN-PGM.
      * -
TEST09               PMA-DEBUT-TESTS.
TEST11                 DISPLAY "========> TEST09 TEST11 OK".
TEST09               PMA-DEBUT-TESTS-F.
TEST10 * -
      * ---
           EXIT PROGRAM.
       .
])

AT_CHECK([${COMPILE} -w  test.cbl -floosy-comment], [0])
AT_CHECK([${COMPILE} -w  test.cbl] , [1],,
[test.cbl: In paragraph 'PMA-DEBUT-TESTS-F':
test.cbl:79: Error: Invalid * at column 8
])
AT_CHECK([${COMPILE} -w  test.cbl -conf=cit.conf], [1],,
[test.cbl:20: Error: LEVEL 01/77 must be at COLUMN 8 to 11 
test.cbl:32: Error: USING field must be in LINKAGE
test.cbl:32: Error: 'DFHCOMMAREA' is not in LINKAGE SECTION
test.cbl:32: Error: USING field must be in LINKAGE
test.cbl:32: Error: 'DFHCOMMAREA' is not in LINKAGE SECTION
test.cbl: In paragraph 'DEBUT':
test.cbl:39: Error: Empty IF - ELSE - END-IF
test.cbl:48: Error: Empty WHEN/OTHER clause
test.cbl:52: Error: Sending field lenght (o,l) larger than receiving field
test.cbl:56: Error: Invalid .. at end of statement
test.cbl:63: Error: Statement start at 9 must start after column 12
test.cbl:63: Error: Invalid <> , use NOT EQUAL
test.cbl:69: Error: Statement start at 11 must start after column 12
test.cbl: In paragraph 'FIN-PGM':
test.cbl:78: Error: PARAGRAPH name must be at COLUMN 8 to 11
test.cbl: In paragraph 'PMA-DEBUT-TESTS':
test.cbl:80: Error: PARAGRAPH name must be at COLUMN 8 to 11
test.cbl: In paragraph 'PMA-DEBUT-TESTS-F':
test.cbl:79: Error: Invalid * at column 8
test.cbl:79: Error: Invalid * at column 8
])

AT_CLEANUP

